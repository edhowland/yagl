#!/usr/bin/env ruby
# yagl
require "rubygems"
require 'getoptlong'
$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__)) + '/lib')
require "yagl"
include Yagl::DSL::MethodBody


$usage=%Q{
Usage:
  yagl [options] destination
  Standard options:
     -s, --source SOURCE            The source erubus template to use
     -o, --output OUTPUT            The output file
     -y, --yaglfile YAGLFILE        The Yagl source file (Default: Yaglfile, dir.ygl)
     -V, --verbose                  Show lots of output
     -p, --pretend                  Run but do not make any changes
     -l, --load_path LOAD_PATH      prepend LOAD_PATH to $LOAD_pATH
     -h, --help                     Show this help

}

opts = GetoptLong.new(
  ['--source', '-s', GetoptLong::REQUIRED_ARGUMENT],
['--output', '-o', GetoptLong::REQUIRED_ARGUMENT],
['--yaglfile', '-y', GetoptLong::REQUIRED_ARGUMENT],
['--verbose', '-V', GetoptLong::NO_ARGUMENT],
['--pretend', '-p', GetoptLong::NO_ARGUMENT],
['--load_path', '-l', GetoptLong::REQUIRED_ARGUMENT],
['--help', '-h', GetoptLong::NO_ARGUMENT]
)

include Yagl::SetOption::SetMethod
# set defaults
group = Yagl::OptionGroup.new 
  group << Yagl::Option.new('source')
  group << Yagl::Option.new('output')
  group << Yagl::Option.new('yaglfile')
  group << Yagl::Option.new('verbose')
  group << Yagl::Option.new('pretend')
  group << Yagl::Option.new('load_path')
  group << Yagl::Option.new('help')


group.each do |opt|
  default_from_option opt.long_option
end


begin
  opts.each do |opt, arg|
    methods_from_option opt
    accessors_from_option opt, arg unless arg.blank?
  end
rescue GetoptLong::InvalidOption => e
  die e.message
end

def vputs(msg, *args)
    puts msg + args.join(' ') if verbose?
  end
die $usage if help?
cmd=(File.basename(Dir.pwd))
if output?
    target = output
  else
    target=ARGV[0] + '/bin/' + cmd 
  end
vputs 'target: ', target
yaglsrc = File.exists?('Yaglfile') ? 'Yaglfile' : cmd + '.ygl'
yaglsrc = yaglfile? ? yaglfile :  yaglsrc
die yaglsrc + ' does not exist' unless File.exists?(yaglsrc)
vputs 'Yagl source: ', yaglsrc


