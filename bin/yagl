#!/usr/bin/env ruby
# yagl - Yet Another Generator Language
require 'getoptlong'
require 'fileutils'
require 'pathname'
require 'erubis'
require File.expand_path(File.dirname(__FILE__)) + '/../lib/yagl'

include FileUtils

# fake out for cucumber

# options

options = []
options << Yagl::Option.new('force', nil, false, "force overwriting files, don't ask")
options << Yagl::Option.new('skip', nil, false, 'skip file if it exists')
options << Yagl::Option.new('quiet', nil, false, 'runs quietly, no output')
options << Yagl::Option.new('verbose', 'V', false, 'Show lots of output')
options << Yagl::Option.new('version')
options << Yagl::Option.new('pretend', nil, false, 'dry run, show what would have happened')
options << Yagl::Option.new('debug', 'x', false, 'Show debugging output')
options << Yagl::Option.new('help')



# target script (cmd)
cmd=(File.basename(Dir.pwd))
target=ARGV[0] + '/bin/' + cmd

discoverer=Yagl::Discoverer.new
template_root=discoverer.templates

erubus=File.read(File.expand_path(File.dirname(__FILE__)) +  '/../template/target.rb.eruby')
eruby = Erubis::Eruby.new(erubus)    # create Eruby object

File.open(target, "w+") do |f|
  f.write eruby.result(binding())
end

chmod(0755, target)
