# Yaglfile
# yagl's own Yaglfile (dog food)
# defines options and templates


# script task :autorun is the default. Any other
# name will be output at a named place in the erubus template:
# script :builder do ... end
# <%= builder %>

script :autorun do 
  def vputs(msg, *args)
    puts msg + (args.empty? ? '' : ': ' + args.join(' ')) if verbose?
  end
  def qputs(*args)
    puts(*args) unless quiet?
  end
  
  def conditionally_execute(cmd, dfile, *args, &block)
    if cmd == :chmod
      vputs 'changing mode', args[0]
      vputs "pretending" if pretend?
      vputs "skipping" if skip?
      self.send cmd, *args unless pretend? or skip?
    else
      if (File.exists? args.last and !force?) or File.directory? args.last
        qputs "exists " + dfile
      else
        qputs((skip? ? 'skipping' : "create") + " #{dfile}")
        if block_given?
          yield args
        else
          vputs "pretending" if pretend?
          vputs "skipping" if skip?
          self.send cmd, *args unless pretend? or skip?
        end
      end
    end
  end
  
  
  die $usage if help?
  
  # load path forced for now
  load_path='../lib'
  load_path!
  
  destination = ARGV[0]
  
  cmd=(File.basename(Dir.pwd))
  if output?
    target = output
  else
    target=ARGV[0] + '/bin/' + cmd 
  end
  vputs 'target', target
  

  yaglsrc = File.exists?('Yaglfile') ? 'Yaglfile' : cmd + '.ygl'
  yaglsrc = yaglfile? ? yaglfile :  yaglsrc
  die "Yaglfile and #{yaglsrc} do not exist" unless File.exists?(yaglsrc)
  vputs 'Yagl source', yaglsrc
  
  discoverer=Yagl::Discoverer.new
  template_root=discoverer.templates
  vputs 'Template', template_root
end



