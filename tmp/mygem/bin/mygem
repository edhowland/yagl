#!/usr/bin/env ruby
# mygem
require "rubygems"
require 'getoptlong'
# TODO remove the following once yagl is a gem
$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__)) + '/../../../lib')
require "yagl"


$usage=%Q{
Usage:
  mygem [options] destination
  Template options:
     -r, --ruby                     install the ruby template
     --ruby-19                      install the ruby-19 template
  General options:
     -f, --force                    force overwriting files, don't ask
     -s, --skip                     skip file if it exists
     -q, --quiet                    runs quietly, no output
     -V, --verbose                  Show lots of output
     -v, --version                  Show this version
     -p, --pretend                  dry run, show what would have happened
     -x, --debug                    Show debugging output
     -h, --help                     Show this help

}

opts = GetoptLong.new(
  ['--ruby', '-r', GetoptLong::NO_ARGUMENT],
['--ruby-19', GetoptLong::NO_ARGUMENT],
['--force', '-f', GetoptLong::NO_ARGUMENT],
['--skip', '-s', GetoptLong::NO_ARGUMENT],
['--quiet', '-q', GetoptLong::NO_ARGUMENT],
['--verbose', '-V', GetoptLong::NO_ARGUMENT],
['--version', '-v', GetoptLong::NO_ARGUMENT],
['--pretend', '-p', GetoptLong::NO_ARGUMENT],
['--debug', '-x', GetoptLong::NO_ARGUMENT],
['--help', '-h', GetoptLong::NO_ARGUMENT]
)

begin
  opts.each do |opt, arg|
    case opt
    when '--ruby'
      die $usage
    when '--ruby-19'
      die $usage
    when '--force'
      die $usage
    when '--skip'
      die $usage
    when '--quiet'
      die $usage
    when '--verbose'
      die $usage
    when '--version'
      die $usage
    when '--pretend'
      die $usage
    when '--debug'
      die $usage
    when '--help'
      die $usage
    else
      die $usage
    end
  end
rescue GetoptLong::InvalidOption => e
  die e.message
end



copier=Yagl::Copier.new('templates', ARGV[0])
copier.copy!
